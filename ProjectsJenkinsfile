#!/bin/env groovy

def cleanCheckout (repo_url) {
    checkout poll: false, scm: [$class: 'GitSCM', branches: [[name:
        '*/master']], extensions: [[$class: 'CleanBeforeCheckout']],
        userRemoteConfigs: [[url: repo_url]]]
}

////////////////////////////////////////////////////////////////////////////////

def dub_projects = [
   "Abscissa/libInputVisitor",
   "BlackEdder/ggplotd",
   "DerelictOrg/DerelictFT",
   "DerelictOrg/DerelictGL3",
   "DerelictOrg/DerelictGLFW3",
   "DerelictOrg/DerelictSDL2",
   "DlangScience/scid",
   "Hackerpilot/libdparse",
   "ariovistus/pyd",
   "atilaneves/unit-threaded",
   "d-gamedev-team/gfm",
   "dlang/dub",
   "economicmodeling/containers",
   "higgsjs/Higgs",
   "kyllingstad/zmqd",
   "lgvz/imageformats",
   "msgpack/msgpack-d",
   "msoucy/dproto",
   "nomad-software/dunit",
   "rejectedsoftware/diet-ng",
   "rejectedsoftware/vibe.d",
   "repeatedly/mustache-d",
   "s-ludwig/taggedalgebraic",
]

stage('Get compiler') {
    node {
        // Requires CopyArtifact plugin
        step ([$class: 'CopyArtifact',
            projectName: 'dlangci-main',
            selector: [$class: 'TriggeredBuildSelector']])
        sh "tar -xf distribution.tar"
    }
}

stage('Clone') {
    def repos = [:]

    for (int i = 0; i < dub_projects.size(); ++i) {
        def proj = dub_projects[i]; // http://stackoverflow.com/a/35776133
        repos["$proj"] = {
            dir("$proj") {
                cleanCheckout "https://github.com/${proj}.git"
            }
        }
    }

    node {
        parallel repos
    }
}

stage('Build') {
    def repos = [:]

    for (int i = 0; i < dub_projects.size(); ++i) {
        def proj = dub_projects[i]; // http://stackoverflow.com/a/35776133
        repos["$proj"] = {
            dir("$proj") {
                withEnv(["PATH=${env.WORKSPACE}/distribution/bin:${env.PATH}"]) {
                    sh "dub build"
                }
            }
        }
    }

    node {
        parallel repos
    }
}

stage('Test') {
    def repos = [:]

    for (int i = 0; i < dub_projects.size(); ++i) {
        def proj = dub_projects[i]; // http://stackoverflow.com/a/35776133
        repos["$proj"] = {
            dir("$proj") {
                withEnv(["PATH=${env.WORKSPACE}/distribution/bin:${env.PATH}"]) {
                    sh "dub test"
                }
            }
        }
    }

    node {
        parallel repos
    }
}
