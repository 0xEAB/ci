---
# https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins+on+Ubuntu
- name: add jenkins apt key
  apt_key: { url: 'https://pkg.jenkins.io/debian-stable/jenkins.io.key' }
- name: add jenkins apt repo
  apt_repository: { repo: 'deb https://pkg.jenkins.io/debian-stable binary/', update_cache: yes }
- name: install jenkins
  apt: { name: "jenkins={{ jenkins_version }}", install_recommends: no, update_cache: yes, cache_valid_time: 3600 }
- name: set http port
  lineinfile:
    dest: /etc/default/jenkins
    regexp: ^HTTP_PORT=
    line: HTTP_PORT={{ jenkins_http_port }}
  notify: restart jenkins
- name: java args
  lineinfile:
    dest: /etc/default/jenkins
    insertafter: ^JAVA_ARGS=
    regexp: '^JAVA_ARGS="\$JAVA_ARGS'
    line: JAVA_ARGS="$JAVA_ARGS -Djenkins.install.runSetupWizard=false -Xms512m -Xmx1024m -XX:+UseG1GC -XX:G1HeapRegionSize=32m -Xloggc:/var/log/jenkins/gc-%t.log -XX:NumberOfGCLogFiles=5 -XX:+UseGCLogFileRotation -XX:GCLogFileSize=20m -XX:+PrintGC -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+PrintHeapAtGC -XX:+PrintGCCause -XX:+PrintTenuringDistribution -XX:+PrintReferenceGC -XX:+PrintAdaptiveSizePolicy"
  notify: restart jenkins
- set_fact:
    jenkins_plugins: "{{ jenkins_plugins + ['thinBackup', 'slave-setup'] }}"
- set_fact:
    jenkins_plugins: "{{ jenkins_plugins + ['github-oauth'] }}"
  when: jenkins_use_github_auth
- name: add jenkins init.groovy.d folder
  file: { dest: /var/lib/jenkins/init.groovy.d, state: directory, owner: jenkins, mode: 0500 }
- name: add jenkins init scripts
  template: { src: "{{ item.1 }}.groovy.j2", dest: "/var/lib/jenkins/init.groovy.d/{{ item.0 }}-{{ item.1 }}.groovy", owner: jenkins, mode: 0400 }
  # manually delete scripts when changing order
  with_indexed_items: [plugins, "{{ 'github_auth' if jenkins_use_github_auth else 'password_auth' }}", executors]
  notify: restart jenkins
- name: compress logs
  cron:
    name: compress_logs
    special_time: daily
    user: jenkins
    job: find /var/lib/jenkins/jobs/ -name log -exec gzip {} \;

- include: tasks/duplicity_backup.yml
  tags: backup
  vars:
    backup_user: jenkins
    backup_dir: /var/lib/jenkins/backup
    backup_partial: "{{ lookup('template', '../templates/backup_partial.sh.j2') }}"
- name: copy backup.groovy script
  tags: backup
  copy: { src: files/backup.groovy, dest: /var/lib/jenkins/backup/backup.groovy, owner: jenkins, mode: 0400 }
